// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VROS.DataAccess;

#nullable disable

namespace VROS.DataAccess.Migrations
{
    [DbContext(typeof(VROSDbContext))]
    [Migration("20250721094127_MovieDbAttempt")]
    partial class MovieDbAttempt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VROS.Domain.Cast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Part")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cast");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = 1,
                            Name = "John Smith",
                            Part = 0
                        },
                        new
                        {
                            Id = 2,
                            MovieId = 2,
                            Name = "Jane Doe",
                            Part = 1
                        },
                        new
                        {
                            Id = 3,
                            MovieId = 2,
                            Name = "Alice Brown",
                            Part = 0
                        },
                        new
                        {
                            Id = 4,
                            MovieId = 3,
                            Name = "Bob White",
                            Part = 2
                        },
                        new
                        {
                            Id = 5,
                            MovieId = 4,
                            Name = "Eve Black",
                            Part = 3
                        });
                });

            modelBuilder.Entity("VROS.Domain.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgeRestriction")
                        .HasColumnType("int");

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("Language")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Length")
                        .HasColumnType("time");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgeRestriction = 16,
                            Genre = 0,
                            IsAvailable = true,
                            Language = 0,
                            Length = new TimeSpan(0, 2, 0, 0, 0),
                            Quantity = 5,
                            ReleaseDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The First Movie"
                        },
                        new
                        {
                            Id = 2,
                            AgeRestriction = 12,
                            Genre = 2,
                            IsAvailable = true,
                            Language = 0,
                            Length = new TimeSpan(0, 1, 50, 0, 0),
                            Quantity = 3,
                            ReleaseDate = new DateTime(2021, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Second Chance"
                        },
                        new
                        {
                            Id = 3,
                            AgeRestriction = 10,
                            Genre = 1,
                            IsAvailable = true,
                            Language = 0,
                            Length = new TimeSpan(0, 1, 35, 0, 0),
                            Quantity = 4,
                            ReleaseDate = new DateTime(2019, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Comedy Night"
                        },
                        new
                        {
                            Id = 4,
                            AgeRestriction = 18,
                            Genre = 3,
                            IsAvailable = false,
                            Language = 0,
                            Length = new TimeSpan(0, 1, 40, 0, 0),
                            Quantity = 2,
                            ReleaseDate = new DateTime(2022, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Horror House"
                        },
                        new
                        {
                            Id = 5,
                            AgeRestriction = 14,
                            Genre = 4,
                            IsAvailable = true,
                            Language = 0,
                            Length = new TimeSpan(0, 2, 10, 0, 0),
                            Quantity = 6,
                            ReleaseDate = new DateTime(2023, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Sci-Fi World"
                        });
                });

            modelBuilder.Entity("VROS.Domain.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = 1,
                            RentedOn = new DateTime(2025, 7, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            ReturnedOn = new DateTime(2025, 7, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            MovieId = 2,
                            RentedOn = new DateTime(2025, 7, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            ReturnedOn = new DateTime(2025, 7, 18, 0, 0, 0, 0, DateTimeKind.Local),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            MovieId = 3,
                            RentedOn = new DateTime(2025, 7, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            ReturnedOn = new DateTime(2025, 7, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            MovieId = 4,
                            RentedOn = new DateTime(2025, 7, 17, 0, 0, 0, 0, DateTimeKind.Local),
                            ReturnedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            MovieId = 5,
                            RentedOn = new DateTime(2025, 7, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            ReturnedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 5
                        });
                });

            modelBuilder.Entity("VROS.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSubscriptionExpired")
                        .HasColumnType("bit");

                    b.Property<int>("Roles")
                        .HasColumnType("int");

                    b.Property<int>("SubscriptionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 28,
                            CardNumber = "1234567890",
                            CreatedOn = new DateTime(2023, 7, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            FullName = "Alice Johnson",
                            IsSubscriptionExpired = false,
                            Roles = 1,
                            SubscriptionType = 1
                        },
                        new
                        {
                            Id = 2,
                            Age = 35,
                            CardNumber = "2345678901",
                            CreatedOn = new DateTime(2024, 7, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            FullName = "Bob Smith",
                            IsSubscriptionExpired = false,
                            Roles = 0,
                            SubscriptionType = 2
                        },
                        new
                        {
                            Id = 3,
                            Age = 22,
                            CardNumber = "3456789012",
                            CreatedOn = new DateTime(2025, 1, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            FullName = "Charlie Brown",
                            IsSubscriptionExpired = true,
                            Roles = 0,
                            SubscriptionType = 0
                        },
                        new
                        {
                            Id = 4,
                            Age = 30,
                            CardNumber = "4567890123",
                            CreatedOn = new DateTime(2022, 7, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            FullName = "Diana Prince",
                            IsSubscriptionExpired = false,
                            Roles = 0,
                            SubscriptionType = 3
                        },
                        new
                        {
                            Id = 5,
                            Age = 40,
                            CardNumber = "5678901234",
                            CreatedOn = new DateTime(2025, 5, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            FullName = "Ethan Hunt",
                            IsSubscriptionExpired = true,
                            Roles = 0,
                            SubscriptionType = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
